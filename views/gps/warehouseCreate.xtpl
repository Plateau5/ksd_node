<!--创建GPS仓库-->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    {{include('./../inc/cssSources')}}
    <link rel="stylesheet" href="{{markUri}}/static/css/customerService.css">
    <link rel="stylesheet" href="{{markUri}}/static/css/manufacturing.css">
    <link rel="stylesheet" href="{{markUri}}/static/dialog/dialog-layer.css">
    <link rel="stylesheet" href="{{markUri}}/static/css/warehouse.css">
    <title>GPS管理-创建GPS仓库</title>
</head>
<body>
<div id="wrapper" class="wrapper">
    <!-------- Part of header Begin -------->
    {{include('./../inc/header')}}
    <!-------- Part of header End -------->

    <!-------- Part of main Begin -------->
    <div id="section" class="section normal_width">
        <!---- Part of slide nav Begin ---->
        {{include('./../inc/sideNav')}}
        <!---- Part of slide nav End ---->

        <!---- Part of Main info Begin ---->
        <div id="main" class="main org_product">
            <div class="crumbs_nav">
                <a href="javascript:;" class="crumbs_item go_warehouse_list">GPS仓库</a>
                <a href="javascript:;" class="crumbs_item">新建仓库</a>
            </div>
            <div class="gps_create">
                <div class="row_item more_value warehouses">
                    <div class="row_title"><em class="require_icon">*</em>仓库名称：</div>
                    <div class="row_val">
                        <ul class="warehouses_list">
                            {{#each (organization_list) }}
								<li class="warehouse_item nor_wrap" data-id="{{this.id}}" data-name="{{this.name}}">{{this.name}}</li>
							{{/each}}
                        </ul>
                    </div>
                </div>
                <div class="row_item more_value tags">
                    <div class="row_title"><em class="require_icon">*</em>标签：</div>
                    <div class="row_val tags_box">
                        <ul class="tags_list">
                            <li class='tag_item add_tag_box'>
                                <input type='text' value='' placeholder='请输入标签名' maxlength='20' />
                            </li>
                        </ul>
                        <em class="add_tag_btn"></em>
                    </div>
                </div>
                <div class="row_item warn_inventory">
                    <div class="row_title" style="padding-left: 6px;width:7.4%;">预警库存：</div>
                    <div class="row_val">
                        <input type="text" class="warn_num" id="warn_inventory" value="" placeholder="请输入数字 如：20" maxlength="3"/>
                    </div>
                </div>
                <div class="btn_box text_left">
                    {{#if (verifyCode(1276)) }}
                    <a href="javascript:;" class="btn orange_btn confirm submit_create">确认</a>
                    {{/if}}
                    <a href="javascript:;" class="btn bg_btn cancel go_warehouse_list">取消</a>
                </div>
            </div>



        </div>
        <!---- Part of Main info End ---->
    </div>
    <!-------- Part of main End -------->

    <!-------- Part of footer Begin -------->
    <!--<div id="footer" class="footer"></div>-->
    <!-------- Part of footer End -------->
    <input type="hidden" value="{{work_city_id}}" id="store_city">
</div>
<div class="loading" id="loading"></div>
</body>
{{include('./../inc/jsSources')}}
<script src="{{markUri}}/static/js/customerService.js" type="text/javascript" charset="UTF-8"></script>
<script src="{{markUri}}/static/dialog/dialog-layer.js" type="text/javascript" charset="UTF-8"></script>
<script src="{{markUri}}/static/js/warehouse.js" type="text/javascript" charset="UTF-8"></script>
<script>
    (function ($) {
        var reqParamsStr = '{{{reqParamsStr}}}';  // 列表页获取数据参数
        if (reqParamsStr.length > 0 ) {
            reqParamsStr = JSON.parse(reqParamsStr);
        }
        var elem = {
            tagsList : $('.tags_list'),
            warn : $('#warn_inventory'),
            city : $('#store_city'),
            submit : $('.submit_create')
        };
        var selectedOrg = null;
        var createSuccessTag = [];
        //机构的选中
        function checkOrg () {
            var elem = $(".warehouse_item");
            elem.off('click').on('click', function () {
                var _this = $(this);
                if (_this.hasClass('selected')) {
                    _this.removeClass('selected')
                } else {
                    _this.addClass('selected').siblings('.warehouse_item').removeClass('selected');
                    selectedOrg = _this.data('id');
                }
            });
        }
        //标签的创建输入框显示逻辑
        function addTagsBox () {
            var btn = $('.add_tag_btn');
            btn.off('click').on('click', function () {
                var i = "<li class='tag_item add_tag_box'>\
                        <input type='text' value='' placeholder='请输入标签名' autofocus='autofocus' maxlength='20' />\
                </li>";
                //$('.tags_list').append('');
                //elem.tagsList.append(i);
                var a = btn.siblings('.tags_list').find('.add_tag_box');
                if (a.length <= 0) {
                    btn.siblings('.tags_list').append(i);
                } else {
                    var v = $.trim(a.find('input').val());
                    if (v) {
                        var str = '<li class="tag_item new_tag"><em class="delete_icon"></em><span class="tag_name">'+ v +'</span></li>';
                        var isRepeat = checkRepeat(v, createSuccessTag, '该标签已存在，请创建新标签');
                        if (!isRepeat) {
                            createSuccessTag.push(v);
                            a.before(str);
                            a.find('input').val('').focus();
                        } else {
                            a.find('input').val('').focus();
                        }
                    } else {
                        a.find('input').focus();
                    }
                }
            })
        }
        //标签输入框的输入事件-标签创建逻辑
        function createTag () {
            elem.tagsList.off('input keyup').on('input keyup', '.add_tag_box input', function (e) {
                var e = e || window.event;
                var _this = $(this);
                var v = $.trim(_this.val());
                  if (e.which == 13) {
                      if (v) {
                          var tagItem = '<li class="tag_item"><em class="delete_icon"></em><span class="tag_name">'+ v +'</span></li>';
                          var isRepeat = checkRepeat(v, createSuccessTag, '该标签已存在，请创建新标签');
                          if (!isRepeat) {
                              createSuccessTag.push(v);
                              _this.parents('.add_tag_box').before(tagItem);
                              //_this.parents('.add_tag_box').remove();
                              _this.val('').focus();
                          } else {
                              elem.tagsList.find('.add_tag_box input').val('').focus();
                          }
                      } else {
                          _this.focus();
                      }
                  }
            })
        }
        //标签的删除逻辑
        function deleteTag () {
            elem.tagsList.off('click').on('click', '.delete_icon', function (e) {
                var e = e || window.event;
                e.stopPropagation();
                e.preventDefault();
                var _this = $(this);
                var p = _this.parents('.tag_item');
                var thisTag = $.trim(p.text());
                p.remove();
                createSuccessTag.remove(thisTag);
            })
        }

        //获取创建数据
        function getData () {
            var data = {};
            var checkedOrg = $('.warehouse_item.selected');
            data.organization_id = $.trim(checkedOrg.data('id'));
            data.name = $.trim(checkedOrg.data('name'));
            data.warning = $.trim(elem.warn.val());
            var tags = [];
            elem.tagsList.find(".tag_item").not('.add_tag_box').each(function () {
                var _this = $(this);
                var tagName = $.trim(_this.text());
                tags.push(tagName);
            });
            //data.data = tags.join(',');
            data.data = tags;
            var city = $.trim(elem.city.val());
            data.city_id = city;
            return data;
        }
        //字段校验
        function verify () {
            var data = getData();
            if (data.organization_id == '' || data.name == '') {
                $alert('请先选择仓库名称');
                return false;
            }
            if (data.data.join(',') == '') {
                $alert('标签不能为空');
                return false;
            }
            if (data.warning) {
                var w = Number(data.warning);
                if (w < 0) {
                    $alert('预警库存不能小于0');
                    return false;
                } else if (w > 300) {
                    $alert('预警库存不能大于300');
                    return false;
                }
            }
            return true;
        }

        //提交按钮的事件绑定
        function submitBind() {
            elem.submit.off('click').on('click', function () {
                submitEvent();
            });
        }
        //提交逻辑
        function submitEvent () {
            var valid = verify();
            if (valid) {
                elem.submit.off('click');
                var data = getData();
                data.data = JSON.stringify(data.data);
                var url = contextPath + '/api/gps/warehouse/create';
                $.ajax({
                    type:'post',
                    timeout:50000,
                    url : url,
                    data : data,
                    beforeSend : function () {
                        $('#loading').show();
                    },
                    success : function (res) {
                        $('#loading').hide();
                        if (res.error_code == 0) {
                            $alert('创建成功', function () {
                                locationTo({
                                    action : contextPath + markUri + '/gps/warehouse/list',
                                    param : {}
                                });
                            });
                        } else {
                            $alert(res.error_msg);
                            submitBind();
                        }
                    },
                    error : function () {
                        $('#loading').hide();
                        $alert('网络异常，请稍后重试');
                        submitBind();
                    }
                });
            } else {
                return;
            }
        }
        /**
         * GPS仓库-面包屑跳转
         * @author Plateau  2018年7月25日13:43:40
         * */
        function goWarehouseList () {
            var btn = $('.go_warehouse_list');
            btn.on('click', function () {
                locationTo({
                    action : contextPath + markUri + "/gps/warehouse/list",
                    param : reqParamsStr
                })
            });
        }
        $(function () {
            numAndAmount('.warn_num');//判断库存预警只能输入数字
            checkOrg();
            addTagsBox();
            createTag();
            deleteTag();
            submitBind();
            goWarehouseList();//GPS仓库-面包屑跳转
        })

    })(jQuery,undefined);
</script>
</html>